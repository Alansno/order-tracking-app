@using Application.City.Commands
@using Application.Package.Commands
@using Application.Product.Commands
@model Application.Package.Dtos.PackageRequest
@inject GetPackages GetPackages
@inject GetCities GetCities
@inject GetProducts GetProducts

@{
    ViewData["Title"] = "Paquete";
}

@if (ViewData["Message"] != null)
{
<div class="alert alert-success">
    @ViewData["Message"]
</div>
}

@if (ViewData["ErrorMessage"] != null)
{
<div class="alert alert-danger">
    @ViewData["ErrorMessage"]
</div>
}

@{
    var packages = await GetPackages.Execute();
    var cities = await GetCities.Execute();
    var products = await GetProducts.Execute();
}

<h1 class="text-center fw-bold mb-5">A침adir paquete</h1>
<div class="d-flex justify-content-center">
    <form asp-action="Store" class="row g-3 needs-validation w-50">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="mb-3">
            <label asp-for="Code" class="form-label">Codigo:</label>
            <input asp-for="Code" type="text" class="form-control" id="validationCustom01" value="JSCUEUNS929" required>
            <span asp-validation-for="Code" class="text-danger"></span>
        </div>
        
        <div class="mb-3">
            <select asp-for="CityId" class="form-select" aria-label="Default select example">
                <option selected>Seleccionar ciudad</option>
                @if (cities.IsSuccess && cities.Value.Count() != 0)
                {
                    @foreach (var city in cities.Value)
                    {
                        <option value="@city.Id">@city.CityName</option>
                    }
                }
                else
                {
                    <option value="">No hay ciudades</option>
                }
            </select>
        </div>

        <div class="text-center">
            <button class="btn btn-primary" type="submit">Guardar</button>
        </div>
    </form>
</div>

<h3 class="text-center fw-bold mt-5">Todos los paquetes</h3>

<div class="d-flex justify-content-center mt-3">
    <table class="table">
        <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Codigo</th>
            <th scope="col">Destino</th>
            <th scope="col">Acciones</th>
            <th scope="col">Agregar productos</th>
        </tr>
        </thead>
        <tbody class="table-group-divider">
        @if (packages.IsSuccess && packages.Value.Count != 0)
        {
            @foreach (var package in packages.Value)
            {
                <tr>
                    <td data-package-id="@package.Id" class="package-id">@package.Id</td>
                    <td>@package.Code</td>
                    <td>@package.CityName</td>
                    <td><a class="btn btn-primary">Editar</a> | <a class="btn btn-danger">Eliminar</a></td>
                    <td>
                        <button type="button" class="btn btn-primary agregar-productos-btn" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                            Agregar productos
                        </button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td>No hay paquetes</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="modal-body" class="modal-body">
                Mostrar los productos aqui
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Seleccionar todos los botones de "Agregar productos"
    const agregarProductosButtons = document.querySelectorAll('.agregar-productos-btn');
    const modalElement = document.querySelector('#modal-body');

    // Asignar evento de clic a cada bot칩n
    agregarProductosButtons.forEach(button => {
        button.addEventListener('click', () => {
            // Obtener el id del paquete desde el `data-package-id` del `td` m치s cercano
            const packageId = button.closest('tr').querySelector('.package-id').getAttribute('data-package-id');

            // Limpiar el contenido del modal
            modalElement.innerHTML = '';

            // Crear y agregar el input con el `packageId` al modal
            const inputId = document.createElement('input');
            inputId.value = packageId;
            inputId.className = 'form-control'; // Puedes agregar m치s clases para el estilo
            inputId.readOnly = true; // Opcional: hacer el input de solo lectura

            modalElement.appendChild(inputId);
        });
    });
</script>


